/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import db.Db;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author sm
 */
public class TrashForm extends javax.swing.JFrame {

    // Déclarations des ComboBox
    //private javax.swing.JComboBox<String> typeid_cbx;
    //private javax.swing.JComboBox<String> employeid_cbx;
    //private javax.swing.JComboBox<String> zone_cbx;
    private Db db;

    public TrashForm() {
        try {
            initComponents();
            db = new Db();
            loadType(); // Charger les types
            LoadTraitement();
            // Après l'insertion des données dans la base
            updateListeEmployes(); // Charger les déchets existants dans la JList
        } catch (Exception ex) {
            Logger.getLogger(TrashForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Méthode pour charger les types dans typeid_cbx
    private void loadType() {
        try {
            String sql = "SELECT * FROM type"; // Modifier avec votre table et colonne
            ResultSet rs = null;
            try {
                rs = db.executeSelect(sql);
            } catch (Exception ex) {
                Logger.getLogger(TrashForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            while (rs.next()) {
                typeid_cbx.addItem(rs.getString("libelletype")); // Ajouter les libellés des types
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void LoadTraitement() {
        try {
            String sql = "SELECT * FROM traitement"; // Modifier avec votre table des traitement
            ResultSet rs = null;
            try {
                rs = db.executeSelect(sql); // Utiliser l'instance 'db' pour appeler 'executeSelect'
            } catch (Exception ex) {
                Logger.getLogger(TrashForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            while (rs.next()) {
                traitement_cbx.addItem(rs.getString("libelle")); // Modifier avec votre colonne de noms de zones
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    // Méthode pour mettre à jour la liste des employés dans la JList
    private void updateListeEmployes() {
        DefaultListModel<String> model = new DefaultListModel<>(); // Crée un modèle pour la JList
        try {
            // Requête SQL avec jointure entre utilisateur et employe
            String sql = "SELECT u.prenom, u.nom "
                    + "FROM utilisateur u "
                    + "JOIN employe e ON u.id = e.utilisateurid "
                    + // Jointure entre les deux tables
                    "WHERE e.roleemid = 1"; 

            ResultSet rs = null;
            try {
                rs = db.executeSelect(sql); // Exécution de la requête SQL
            } catch (Exception ex) {
                Logger.getLogger(TrashForm.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Boucle pour récupérer les données et ajouter à la JList
            while (rs.next()) {
                String nomEmploye = rs.getString("nom"); // Récupérer le nom de l'employé
                String prenomEmploye = rs.getString("prenom"); // Récupérer le prénom de l'employé
                model.addElement("Employé: " + nomEmploye + " " + prenomEmploye); // Ajouter à la JList
            }

            // Mettre à jour la JList avec le modèle
            liste.setModel(model);

        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Erreur lors du chargement des employés.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeid = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        enregistrer_btn = new javax.swing.JButton();
        typeid_cbx = new javax.swing.JComboBox<>();
        traitement_cbx = new javax.swing.JComboBox<>();
        home_tf = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        liste = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        typeid.setText("typeid");

        jLabel4.setText("traitement");

        enregistrer_btn.setText("Enregistrer");
        enregistrer_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrer_btnActionPerformed(evt);
            }
        });

        typeid_cbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeid_cbxActionPerformed(evt);
            }
        });

        home_tf.setText("Home");
        home_tf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home_tfMouseClicked(evt);
            }
        });

        jLabel1.setText("Liste des employe charge de s'occuper des dechets apres la collecte");

        jScrollPane1.setViewportView(liste);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 78, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeid, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(traitement_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeid_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(enregistrer_btn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(home_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeid)
                    .addComponent(typeid_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(traitement_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(enregistrer_btn)
                .addGap(26, 26, 26)
                .addComponent(home_tf)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeid_cbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeid_cbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeid_cbxActionPerformed

    private void enregistrer_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrer_btnActionPerformed
        // Code pour enregistrer les données
        String typeid = (String) typeid_cbx.getSelectedItem();
        String traitement = (String) traitement_cbx.getSelectedItem();

        // Validation des champs
        if (typeid == null || traitement == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Tous les champs doivent être remplis.");
            return; // Retourner si des champs sont vides
        }

        String sqlCheck = "SELECT COUNT(*) FROM dechet WHERE typeid = ? AND traitement = ?";
        try {
            Db dbInstance = Db.getInstance();
            dbInstance.iniPreparedCmd(sqlCheck);
            dbInstance.getPstmt().setString(1, typeid);
            dbInstance.getPstmt().setString(2, traitement);

            ResultSet rs = dbInstance.executePreparedSelect();
            if (rs.next() && rs.getInt(1) > 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Le traitement de ce type de déchet a déjà été attribué.");
                return;
            }

            String sqlInsert = "INSERT INTO dechet (typeid, traitement) VALUES (?, ?)";
            dbInstance.iniPreparedCmd(sqlInsert);
            dbInstance.getPstmt().setString(1, typeid);
            dbInstance.getPstmt().setString(2, traitement);

            int result = dbInstance.executePreparedCUD();
            if (result > 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Enregistrement effectué avec succès!");
                updateListeEmployes(); // Mettre à jour la liste des employés
                typeid_cbx.setSelectedIndex(0);
                traitement_cbx.setSelectedIndex(0);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement.");
            }
            dbInstance.FermerConnexion();
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Erreur: " + ex.getMessage());
        }
    }//GEN-LAST:event_enregistrer_btnActionPerformed

    private void home_tfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_tfMouseClicked
        this.hide();
        new BoardForm().setVisible(true);    }//GEN-LAST:event_home_tfMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrashForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrashForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrashForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrashForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrashForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enregistrer_btn;
    private javax.swing.JLabel home_tf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> liste;
    private javax.swing.JComboBox<String> traitement_cbx;
    private javax.swing.JLabel typeid;
    private javax.swing.JComboBox<String> typeid_cbx;
    // End of variables declaration//GEN-END:variables
}
